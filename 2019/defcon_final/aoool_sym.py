nxt_arr = [0x0L, 0x4L, 0x5L, 0x6L, 0x7L, 0x8L, 0x9L, 0xaL, 0xbL, 0xcL, 0xdL, 0x4L, 0xeL, 0xfL, 0x10L, 0x11L, 0x4L, 0x11L, 0x11L, 0x12L, 0x11L, 0x11L, 0x11L, 0x13L, 0x14L, 0x11L, 0x15L, 0x16L, 0x17L, 0x18L, 0x19L, 0x11L, 0x11L, 0x1aL, 0x1bL, 0x22L, 0x2aL, 0x1fL, 0x45L, 0x2bL, 0x44L, 0x43L, 0x42L, 0x41L, 0x23L, 0x1dL, 0x1dL, 0x40L, 0x3fL, 0x3eL, 0x3dL, 0x3cL, 0x3bL, 0x3aL, 0x39L, 0x38L, 0x37L, 0x36L, 0x35L, 0x34L, 0x33L, 0x32L, 0x31L, 0x30L, 0x2fL, 0x2eL, 0x2dL, 0x2cL, 0x29L, 0x1eL, 0x1cL, 0x28L, 0x27L, 0x26L, 0x25L, 0x24L, 0x21L, 0x20L, 0x1eL, 0x1cL, 0x46L, 0x3L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L]
chk_arr = [0x0L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x14L, 0x21L, 0x48L, 0x44L, 0x21L, 0x43L, 0x42L, 0x40L, 0x3fL, 0x14L, 0x47L, 0x47L, 0x3eL, 0x3dL, 0x3cL, 0x3aL, 0x38L, 0x36L, 0x33L, 0x32L, 0x31L, 0x30L, 0x2fL, 0x2dL, 0x2cL, 0x2aL, 0x28L, 0x27L, 0x26L, 0x25L, 0x24L, 0x23L, 0x22L, 0x20L, 0x1eL, 0x1dL, 0x19L, 0x18L, 0x17L, 0x16L, 0x15L, 0x13L, 0x12L, 0xeL, 0x7L, 0x3L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x46L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L]
sbox1 = [0x0L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x2L, 0x3L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x2L, 0x1L, 0x4L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x5L, 0x6L, 0x7L, 0x8L, 0x9L, 0xaL, 0xbL, 0xbL, 0xcL, 0xcL, 0xcL, 0xcL, 0xcL, 0xcL, 0xcL, 0xcL, 0xcL, 0xcL, 0x1L, 0xdL, 0x1L, 0xeL, 0x1L, 0x1L, 0x1L, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0xfL, 0x1L, 0xbL, 0x1L, 0x1L, 0x10L, 0x1L, 0x11L, 0xfL, 0x12L, 0x13L, 0x14L, 0xfL, 0x15L, 0xfL, 0x16L, 0xfL, 0xfL, 0x17L, 0x18L, 0x19L, 0x1aL, 0x1bL, 0xfL, 0x1cL, 0x1dL, 0x1eL, 0xfL, 0x1fL, 0xfL, 0x20L, 0xfL, 0xfL, 0x21L, 0x1L, 0x22L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L, 0x1L]
sbox2 = [0x0L, 0x0L, 0x0L, 0x50L, 0x51L, 0x51L, 0x51L, 0x4bL, 0x51L, 0x51L, 0x51L, 0x51L, 0x51L, 0x51L, 0x42L, 0x51L, 0x51L, 0x0L, 0x39L, 0x32L, 0x12L, 0x2eL, 0x2eL, 0x2fL, 0x34L, 0x33L, 0x51L, 0x51L, 0x51L, 0x42L, 0x39L, 0x0L, 0x2dL, 0x12L, 0x2dL, 0x2fL, 0x2aL, 0x2aL, 0x25L, 0x22L, 0x1dL, 0x0L, 0x2bL, 0x0L, 0x22L, 0x26L, 0x0L, 0x20L, 0x1aL, 0x18L, 0x18L, 0x17L, 0x0L, 0x0L, 0x16L, 0x0L, 0x1fL, 0x0L, 0x1cL, 0x0L, 0x15L, 0x16L, 0x1fL, 0x12L, 0x11L, 0x0L, 0x18L, 0x10L, 0x12L, 0x51L, 0x51L, 0x2bL, 0x22L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L, 0x0L]

def chk_sym(inp):
	inp = bytearray(inp)
	cur = 1
	for c in inp:
		if cur != chk_arr[sbox1[c] + sbox2[cur]]:
			return "wrong"
		cur = nxt_arr[sbox1[c] + sbox2[cur]]

	return "correct"

sym_arr = []
for i in range(58, 127):
	if chk_sym(chr(i)) == "correct":
		sym_arr.append(chr(i))

res_arr = []
for cnt in range(10):
	sym_tmp = []
	for i in range(len(sym_arr)):
		for j in range(58, 127):
			if chk_sym(sym_arr[i] + chr(j)) == "correct":
				sym_tmp.append(sym_arr[i] + chr(j))
	sym_arr = sym_tmp[:]
	print sym_tmp

print
print chk_sym('main')
print chk_sym('server')
print chk_sym('123')
print chk_sym('hihi')